<Window x:Class="UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:virtualDrive="clr-namespace:VirtualFileManagerDrive.Core;assembly=VirtualFileManagerDrive.Core"
        xmlns:view="clr-namespace:UI.ViewModels"
        xmlns:conv="clr-namespace:UI.Converters"
        xmlns:control="clr-namespace:UI.Controls"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
        Title="Virtual File Manager Drive (v1.0.0)"
        Height="600" Width="700"
        MinHeight="400" MinWidth="500"
        MouseDown="MainWindow_OnMouseDown"
        KeyDown="MainWindow_OnKeyDown"
        Name="CurrentWindow"
        Icon="{Binding Converter={conv:WindowsIconConverter Index=42, ConvertToImage=False}}"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style x:Key="InvisibleIfServerSelectedStyle" TargetType="{x:Type FrameworkElement}">
            <Setter Property="Visibility" Value="{Binding SelectedItem, ElementName=ServerList, Converter={conv:ConditionalNullConverter NullValue=Visible, NotNullValue=Collapsed}}"/>
        </Style>
        <Style x:Key="VisibleIfServerSelectedStyle" TargetType="{x:Type FrameworkElement}">
            <Setter Property="Visibility" Value="{Binding SelectedItem, ElementName=ServerList, Converter={conv:ConditionalNullConverter NullValue=Collapsed, NotNullValue=Visible}}"/>
        </Style>
        <DataTemplate DataType="{x:Type view:ServerInstanceViewModel}" x:Key="ServerInfoTemplate">
            <DataTemplate.Resources>
                <Style TargetType="{x:Type DockPanel}">
                    <Style.Resources>
                        <Style TargetType="{x:Type control:SelectableText}">
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                        </Style>
                    </Style.Resources>
                </Style>
            </DataTemplate.Resources>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <GroupBox Grid.Row="0" Header="Server Details">
                    <StackPanel>
                        <DockPanel>
                            <TextBlock>Connection Type</TextBlock>
                            <control:SelectableText Text="{Binding ConnectionType, Mode=OneWay}"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock>Server Name</TextBlock>
                            <control:SelectableText Text="{Binding ServerName, Mode=OneWay}"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock>Server Address</TextBlock>
                            <control:SelectableText Text="{Binding AddressAndPort, Mode=OneWay}"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock>Username</TextBlock>
                            <control:SelectableText Text="{Binding User, Mode=OneWay}"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock>Automatically Disconnect After</TextBlock>
                            <control:SelectableText Text="{Binding AutoDisconnectAfterString, Mode=OneWay}"/>
                        </DockPanel>
                    </StackPanel>
                </GroupBox>
                <GroupBox Grid.Row="1" Header="SSH" Visibility="{Binding IsSecureShellBased, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <StackPanel>
                        <DockPanel>
                            <TextBlock>Operating System</TextBlock>
                            <control:SelectableText Text="{Binding OperatingSystemString, Mode=OneWay}"/>
                        </DockPanel>
                    </StackPanel>
                </GroupBox>
                <GroupBox Grid.Row="2" Header="Volume Information">
                    <StackPanel>
                        <DockPanel>
                            <TextBlock>Name</TextBlock>
                            <control:SelectableText Text="{Binding VolumeName, Mode=OneWay}"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock>Letter</TextBlock>
                            <control:SelectableText Text="{Binding VolumeLetter, Mode=OneWay, Converter={StaticResource FormatConverter}, ConverterParameter=[]:/}"/>
                        </DockPanel>
                    </StackPanel>
                </GroupBox>
                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="150" Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition MinWidth="150" Width="*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Logs" Grid.Column="0">
                        <ListBox BorderThickness="0">
                            
                        </ListBox>
                    </GroupBox>
                    <GridSplitter Grid.Column="1"
                                  Width="3"
                                  Background="Transparent"
                                  VerticalAlignment="Stretch" 
                                  HorizontalAlignment="Center" />
                    <GroupBox Header="Log Information" Grid.Column="2">
                        
                    </GroupBox>
                </Grid>
                <GroupBox Grid.Row="4" Header="Controls">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Content="Execute..." Grid.Column="0"
                                IsEnabled="{Binding IsSecureShellBased}"
                                Click="EditServerButton_OnClick"/>
                        <Button Content="{Binding IsConnected, Converter={conv:ConditionalBoolConverter TrueValue=Disconnect, FalseValue=Connect}}" Grid.Column="1"
                                Click="EditServerButton_OnClick"/>
                        <Button Content="{Binding IsMounted, Converter={conv:ConditionalBoolConverter TrueValue=Unmount, FalseValue=Mount}}" Grid.Column="2"
                                Click="EditServerButton_OnClick"/>
                        <Button Content="Edit" Grid.Column="3"
                                Click="EditServerButton_OnClick"/>
                    </Grid>
                </GroupBox>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type view:ServerInstanceViewModel}" x:Key="ServerListTemplate">
            <StackPanel Margin="0 1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <control:WindowsIcon Grid.Column="0"
                                         Margin="0 0 5 0"
                                         Index="79"/>
                    <TextBlock Grid.Column="1"
                               Foreground="{Binding IsConnected, Converter={conv:ConditionalBoolConverter TrueValue=Green, FalseValue=Black}, Mode=OneWay}"
                               Text="{Binding ServerName}"/>
                    <Grid Grid.Column="2" ToolTip="{Binding ConnectionToolTip}">
                        <control:WindowsIcon Index="{Binding ConnectionIconIndex, Mode=OneTime}" File="netcenter.dll"/>
                        <control:WindowsIcon Index="4" File="aclui.dll" IsCorneredIcon="True">
                            <control:WindowsIcon.Style>
                                <Style TargetType="{x:Type control:WindowsIcon}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </control:WindowsIcon.Style>
                        </control:WindowsIcon>
                    </Grid>
                </Grid>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <Grid x:Name="RootElement" Focusable="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" MinWidth="150" MaxWidth="{Binding ActualWidth, ElementName=CurrentWindow, Converter={conv:MathConverter Operator=/, Argument=2}}"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <GroupBox Grid.Row="0" Margin="2" Header="Select Server">
                <ListBox x:Name="ServerList" BorderThickness="0"
                         SelectionChanged="ServerList_OnSelectionChanged"
                         ItemsSource="{x:Static virtualDrive:ServerInstance.SavedServers}">
                    <ListBox.Resources>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="AllowDrop" Value="True"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <EventSetter Event="MouseDoubleClick" Handler="EditServerButton_OnClick"/>
                            <EventSetter Event="PreviewMouseMove" Handler="ServerListItem_PreviewMouseMove"/>
                            <EventSetter Event="Drop" Handler="ServerListItem_OnDropEvent"/>
                        </Style>
                    </ListBox.Resources>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <ContentPresenter Content="{Binding View}"
                                              ContentTemplate="{StaticResource ServerListTemplate}">
                                <ContentPresenter.ContextMenu>
                                    <ContextMenu Loaded="ContextMenu_OnLoaded">
                                        <MenuItem Tag="Mount"
                                                  Click="ContextMenuItem_OnClick">
                                            <MenuItem.Style>
                                                <Style TargetType="{x:Type MenuItem}">
                                                    <Style.Triggers>
                                                        <Trigger Property="Header" Value="Mount">
                                                            <Setter Property="Icon" Value="{Binding Converter={conv:WindowsIconConverter Index=149}}"/>
                                                        </Trigger>
                                                        <Trigger Property="Header" Value="Unmount">
                                                            <Setter Property="Icon" Value="{Binding Converter={conv:WindowsIconConverter Index=10}}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Tag="Connect"
                                                  Click="ContextMenuItem_OnClick">
                                            <MenuItem.Style>
                                                <Style TargetType="{x:Type MenuItem}">
                                                    <Style.Triggers>
                                                        <Trigger Property="Header" Value="Connect">
                                                            <Setter Property="Icon" Value="{Binding Converter={conv:WindowsIconConverter Index=300}}"/>
                                                        </Trigger>
                                                        <Trigger Property="Header" Value="Disconnect">
                                                            <Setter Property="Icon" Value="{Binding Converter={conv:WindowsIconConverter Index=027}}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Tag="Open Folder"
                                                  Icon="{Binding Converter={conv:WindowsIconConverter Index=155}}"
                                                  Click="ContextMenuItem_OnClick"/>
                                        <MenuItem Tag="Open Terminal"
                                                  Icon="{Binding Converter={conv:WindowsIconConverter File=cmd.exe, Index=0}}"
                                                  Click="ContextMenuItem_OnClick"/>
                                        <MenuItem Tag="Move Up"
                                                  Icon="{Binding Converter={conv:WindowsIconConverter Index=308}}"
                                                  Click="ContextMenuItem_OnClick"/>
                                        <MenuItem Tag="Move Down"
                                                  Icon="{Binding Converter={conv:WindowsIconConverter Index=308, Rotate=180}}"
                                                  Click="ContextMenuItem_OnClick"/>
                                        <MenuItem Tag="Remove"
                                                  Click="ContextMenuItem_OnClick"
                                                  Icon="{Binding Converter={conv:WindowsIconConverter Index=131}}"
                                                  Foreground="Red"/>
                                    </ContextMenu>
                                </ContentPresenter.ContextMenu>
                            </ContentPresenter>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </GroupBox>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Content="Add" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="0"
                        Margin="5 4 2.5 5" Click="AddServerButton_OnClick"/>
                <Button Content="Remove" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="1"
                        IsEnabled="{Binding SelectedItem, ElementName=ServerList, Converter={conv:ConditionalNullConverter NullValue=false, NotNullValue=true}}"
                        Margin="2.5 4 5 5" Click="RemoveServerButton_OnClick"/>
            </Grid>
        </Grid>
        <GridSplitter Grid.Row="0" Grid.Column="1" Margin="2,0,2,0"
                      Width="3" 
                      VerticalAlignment="Stretch" 
                      HorizontalAlignment="Center" />
        <Grid Grid.Row="0" Grid.Column="2">
            <StackPanel Margin="2" Style="{StaticResource InvisibleIfServerSelectedStyle}">
                <GroupBox Header="An error occurred!" Foreground="Red">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <control:WindowsIcon Grid.Column="0"
                                             Margin=" 5 0"
                                             File="netshell.dll"
                                             Index="93"
                                             Large="True"/>
                        <control:SelectableText Foreground="Red" Grid.Column="1">
                            We couldn't find Dokany on your system or it's not installed! After installing it, restart the application.
                        </control:SelectableText>
                        <Button VerticalAlignment="Bottom" Grid.Column="2" Click="InstallDokany_OnClick">
                            <DockPanel VerticalAlignment="Center">
                                <control:WindowsIcon Margin=" 0 2 5 0"
                                                     Index="261"/>
                                <TextBlock>Install...</TextBlock>
                            </DockPanel>
                        </Button>
                    </Grid>
                </GroupBox>
                <GroupBox Header="Welcome!">
                    <control:SelectableText Text="Hey there! Add or select some servers from the left to start!"/>
                </GroupBox>
                <GroupBox Header="About">
                    <control:SelectableText>
                        This application allow you to mount a virtual volume that allow you to browse through server files.
                        The magic behind this is backed by Dokany (fork of Dokan), a driver that allows to develop file systems.
                    </control:SelectableText>
                </GroupBox>
            </StackPanel>
            <Grid Margin="2" Style="{StaticResource VisibleIfServerSelectedStyle}">
                <ContentControl Content="{Binding SelectedItem.View, ElementName=ServerList}"
                                ContentTemplate="{StaticResource ServerInfoTemplate}"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
